# action.yml
name: 'Alt Life'
description: 'Second chance for impact driven projects'
branding:
  icon: 'hash'
  color: 'blue'

inputs:
  wallet_address:
    description: '0xBc56DaAFe2C3C4F25761E5E0Ad62b010773F1780'
    required: true
  git_url:
    description: 'https://github.com/athul-22/altlife-test'
    required: true
  type:
    description: 'type of codebase (generic, static, react)'
    required: false
    default: 'generic'

outputs:
  result:
    description: 'Alt Life Status'
    value: ${{ steps.altlife.outputs.result }}

runs:
  using: 'composite'
  steps:
    - name: Validate Inputs
      shell: bash
      run: |
        if [ -z "${{ inputs.wallet_address }}" ]; then
          echo "Error: Your Wallet Address input is required"
          exit 1
        fi
        if [ -z "${{ inputs.git_url }}" ]; then
          echo "Error: Git Codebase URL is required"
          exit 1
        fi

    - name: Give code/apps a second life
      id: altlife
      shell: bash
      env:
        WALLET_ADDRESS: ${{ inputs.wallet_address }}
        GIT_URL: ${{ inputs.git_url }}
        TYPE: ${{ inputs.type }}
      run: |
        # RESPONSE=$(curl -X POST "https://65e0-14-195-142-82.ngrok-free.app/api/v1.0/deploy" -H "Content-Type: application/json" -d "{\"wallet_address\":\"$WALLET_ADDRESS\",\"git_url\":\"$GIT_URL\",\"type\":\"$TYPE\"}" -s)
        
        RESPONSE=$(curl -X POST "https://65e0-14-195-142-82.ngrok-free.app/api/v1.0/deploy" \
          -H "Content-Type: application/json" \
          -d "$(jq -n \
          --arg wallet "$WALLET_ADDRESS" \
          --arg git "$GIT_URL" \
          --arg type "$TYPE" \
          '{wallet_address: $wallet, git_url: $git, type: $type}')" \
          -s)

        # Debug: Print raw response
        echo "Raw Response: $RESPONSE"
        
        RESULT=$(echo "$RESPONSE" | jq -r '.result // empty')
        
        if [ -z "$RESULT" ] || [ "$RESULT" == "null" ]; then
          echo "Error: Failed to retrieve result"
          echo "Full Response: $RESPONSE"
          exit 1
        fi
        
        echo "result=$RESULT" >> $GITHUB_OUTPUT
        echo "Result retrieved successfully"